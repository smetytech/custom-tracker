name: Build and Publish Tracker (jsDelivr)

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'vite.config.js'
      - 'package.json'
      - '.github/workflows/cdn-publish.yml'
  workflow_dispatch: {}

permissions:
  contents: write   # need write to push cdn branch & tags
  id-token: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # need full history for tags

      - name: Use Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Show build output
        run: ls -l dist

      - name: Publish dist to cdn branch (jsDelivr)
        id: publish
        run: |
          set -e
          VERSION=$(node -p "require('./package.json').version")
          echo "Detected version: $VERSION"
          rm -rf cdn-tmp
          mkdir cdn-tmp
          cp -R dist/* cdn-tmp/
          mkdir -p cdn-tmp/v$VERSION
          cp -R dist/* cdn-tmp/v$VERSION/
          cd cdn-tmp
          git init -b cdn
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "CDN build v$VERSION (source $GITHUB_SHA)" >/dev/null
          git remote add origin https://github.com/${GITHUB_REPOSITORY}.git
          # Fetch existing tags so we can decide if we create a new one
          git fetch origin --tags >/dev/null 2>&1 || true
          # Push (force to ensure branch matches built artifacts only)
          git push -f origin cdn
          if git ls-remote --tags origin refs/tags/v$VERSION | grep -q "refs/tags/v$VERSION"; then
            echo "Tag v$VERSION already exists, not recreating"
          else
            git tag v$VERSION
            git push origin v$VERSION
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          cd ..

      - name: jsDelivr URLs
        run: |
          VERSION='${{ steps.publish.outputs.version }}'
          REPO='${{ github.repository }}'
          echo "Latest (branch): https://cdn.jsdelivr.net/gh/$REPO@cdn/tracker.umd.js"
          echo "Versioned (tag): https://cdn.jsdelivr.net/gh/$REPO@v$VERSION/tracker.umd.js"
          echo "Versioned (folder on branch): https://cdn.jsdelivr.net/gh/$REPO@cdn/v$VERSION/tracker.umd.js"

# Usage examples (replace OWNER/REPO):
# <script src="https://cdn.jsdelivr.net/gh/OWNER/REPO@cdn/tracker.umd.js"></script>
# Locked version (tag):
# <script src="https://cdn.jsdelivr.net/gh/OWNER/REPO@v1.0.0/tracker.umd.js"></script>
# Locked version (folder in cdn branch):
# <script src="https://cdn.jsdelivr.net/gh/OWNER/REPO@cdn/v1.0.0/tracker.umd.js"></script>

# Cache control: jsDelivr caches aggressively; bump version (package.json) to invalidate.
